import express from 'express';
import User from '../../models/user.js';
import Company from '../../models/company.js';
import Transporteur from '../../models/transporter.js'; // Importez le mod√®le Transporteur
import authorization from '../../middleware/authorization.js';

const router = express.Router();

// üîπ Route pour supprimer un utilisateur et ses donn√©es associ√©es
router.delete('/users/me', authorization, async (req, res) => {
    try {
        // R√©cup√©rer l'utilisateur √† supprimer
        const user = await User.findById(req.params.userId);
        if (!user) {
            return res.status(404).json({ error: 'Utilisateur non trouv√©.' });
        }

        // Supprimer les donn√©es associ√©es en fonction du r√¥le
        if (user.role === 'entreprise') {
            // Supprimer l'entreprise associ√©e
            await Company.findOneAndDelete({ userId: user._id });
        } else if (user.role === 'transporteur') {
            // Supprimer le transporteur associ√©
            await Transporteur.findOneAndDelete({ userId: user._id });
        }

        // Supprimer l'utilisateur
        await User.findByIdAndDelete(req.params.userId);

        // R√©ponse en cas de succ√®s
        res.status(200).json({ message: 'Utilisateur et donn√©es associ√©es supprim√©s avec succ√®s.' });
    } catch (error) {
        console.error('Erreur lors de la suppression de l\'utilisateur:', error);
        res.status(500).json({ error: 'Erreur interne du serveur.' });
    }
});

export default router;